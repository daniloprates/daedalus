{"version":3,"file":"main.38914edf4bf2907dc699.bundle.js","sources":["webpack:///./source/renderer/app/components/status/BlockConsolidationStatus.js"],"sourcesContent":["// @flow\nimport React, { Component, Fragment } from 'react';\nimport { observer } from 'mobx-react';\nimport {\n  defineMessages,\n  intlShape,\n  FormattedHTMLMessage,\n  FormattedMessage,\n} from 'react-intl';\nimport classnames from 'classnames';\nimport { Button } from 'react-polymorph/lib/components/Button';\nimport { ButtonSkin } from 'react-polymorph/lib/skins/simple/ButtonSkin';\nimport SVGInline from 'react-svg-inline';\nimport DialogCloseButton from '../widgets/DialogCloseButton';\nimport styles from './BlockConsolidationStatus.scss';\nimport closeCrossThin from '../../assets/images/close-cross-thin.inline.svg';\nimport externalLinkIcon from '../../assets/images/link-ic.inline.svg';\nimport epochs from '../../assets/images/block-consolidation/epochs.inline.svg';\n\nconst messages = defineMessages({\n  title: {\n    id: 'blockConsolidationStatus.title',\n    defaultMessage: '!!!Block storage consolidation status',\n    description: 'Title of \"Block consolidation status\" page.',\n  },\n  description1: {\n    id: 'blockConsolidationStatus.description1',\n    defaultMessage: '!!!Block storage is being consolidated.',\n    description: 'Description 1 of \"Block consolidation status\" page.',\n  },\n  description2: {\n    id: 'blockConsolidationStatus.description2',\n    defaultMessage:\n      '!!!Blocks for the current epoch ({currentEpoch}) and the previous epoch ({currentEpochBehind}) are stored as one file per block. All previous epochs will be consolidated to two files per epoch.',\n    description: 'Description 2 of \"Block consolidation status\" page.',\n  },\n  description3: {\n    id: 'blockConsolidationStatus.description3',\n    defaultMessage:\n      '!!!This reduces the number of files and the amount of hard drive space required to store the blockchain on your machine.',\n    description: 'Description 3 of \"Block consolidation status\" page.',\n  },\n  epochsConsolidatedOfTotal: {\n    id: 'blockConsolidationStatus.epochsConsolidatedOfTotal',\n    defaultMessage:\n      '!!!<b>{epochsConsolidated}</b> <em>of</em> <b>{currentEpoch}</b><br />epochs consolidated',\n    description:\n      'Epochs Consolidated Of Total on \"Block consolidation status\" page.',\n  },\n  epoch: {\n    id: 'blockConsolidationStatus.epoch',\n    defaultMessage: '!!!epoch',\n    description: 'Singular Epoch on \"Block consolidation status\" page.',\n  },\n  epochs: {\n    id: 'blockConsolidationStatus.epochs',\n    defaultMessage: '!!!epochs',\n    description: 'Plural Epochs on \"Block consolidation status\" page.',\n  },\n  epochsConsolidated: {\n    id: 'blockConsolidationStatus.epochsConsolidated',\n    defaultMessage: '!!!epochs consolidated',\n    description: 'Epochs consolidated on \"Block consolidation status\" page.',\n  },\n  synced: {\n    id: 'blockConsolidationStatus.synced',\n    defaultMessage: '!!!{epochsSynced}% blocks synced',\n    description: 'synced on \"Block consolidation status\" page.',\n  },\n  learnMoreButton: {\n    id: 'blockConsolidationStatus.learnMoreButton',\n    defaultMessage: '!!!Learn more.',\n    description: 'Learn more Button on \"Block consolidation status\" page.',\n  },\n  learnMoreButtonURL: {\n    id: 'blockConsolidationStatus.learnMoreButtonURL',\n    defaultMessage:\n      '!!!https://iohk.zendesk.com/hc/en-us/articles/360016060314',\n    description:\n      'URL of Learn more Button on \"Block consolidation status\" page.',\n  },\n});\n\ntype Props = {\n  currentEpoch: number,\n  epochsConsolidated: number,\n  epochsSynced: number,\n  onExternalLinkClick: Function,\n  onClose: Function,\n};\n\n@observer\nexport default class BlockConsolidationStatus extends Component<Props> {\n  static contextTypes = {\n    intl: intlShape.isRequired,\n  };\n\n  getWidthOfEpochsConsolidated = (\n    epochsConsolidated: number,\n    currentEpoch: number\n  ) => {\n    const widthOfEpochsConsolidated =\n      (epochsConsolidated * 100) / (currentEpoch - 2);\n    return Math.min(widthOfEpochsConsolidated, 100);\n  };\n\n  getPositionOfEpochsConsolidated = (widthOfEpochsConsolidated: number) =>\n    widthOfEpochsConsolidated > 32\n      ? { right: 8 }\n      : { left: 0, textAlign: 'left' };\n\n  getPositionOfEpochsSynced = (widthOfEpochsSynced: number) =>\n    widthOfEpochsSynced > 20 ? { right: 0 } : { left: 0 };\n\n  render() {\n    const {\n      currentEpoch,\n      epochsConsolidated,\n      epochsSynced,\n      onExternalLinkClick,\n      onClose,\n    } = this.props;\n    const { formatMessage } = this.context.intl;\n    const widthOfEpochsConsolidated = this.getWidthOfEpochsConsolidated(\n      epochsConsolidated,\n      currentEpoch\n    );\n\n    const description2Styles = classnames([\n      styles.description,\n      !currentEpoch ? styles.descriptionNoCurrentEpoch : null,\n    ]);\n\n    const epochsStyles = classnames([\n      styles.epochs,\n      !currentEpoch ? styles.epochsNoCurrentEpoch : null,\n    ]);\n\n    const indicatorContainerStyles = classnames([\n      styles.indicatorContainer,\n      !currentEpoch ? styles.indicatorContainerNoCurrentEpochs : null,\n    ]);\n\n    const currentEpochValue = currentEpoch > 0 ? <b>({currentEpoch})</b> : '';\n    const currentEpochBehindValue =\n      currentEpoch > 0 ? <b>({Math.max(currentEpoch - 1, 0)})</b> : '';\n\n    return (\n      <div className={styles.component}>\n        <DialogCloseButton\n          className={styles.closeButton}\n          icon={closeCrossThin}\n          onClose={onClose}\n        />\n\n        <div className={styles.container}>\n          <div className={styles.content}>\n            <h1>{formatMessage(messages.title)}</h1>\n            <p className={styles.description}>\n              {formatMessage(messages.description1)}\n            </p>\n            <p className={description2Styles}>\n              <FormattedMessage\n                {...messages.description2}\n                values={{\n                  currentEpoch: currentEpochValue,\n                  currentEpochBehind: currentEpochBehindValue,\n                }}\n              />\n            </p>\n            <p className={styles.description}>\n              {formatMessage(messages.description3)}\n            </p>\n\n            <div className={epochsStyles}>\n              <p>\n                <FormattedHTMLMessage\n                  {...messages.epochsConsolidatedOfTotal}\n                  values={{\n                    epochsConsolidated,\n                    currentEpoch,\n                  }}\n                />\n              </p>\n              <SVGInline svg={epochs} className={styles.epochsImage} />\n            </div>\n\n            <div className={styles.indicator}>\n              <div className={indicatorContainerStyles}>\n                {!!currentEpoch && (\n                  <Fragment>\n                    <p className={styles.zeroEpoch}>\n                      {formatMessage(messages.epoch)} 0\n                    </p>\n                    <div className={styles.indicatorEpochsBehind}>\n                      <p>\n                        {formatMessage(messages.epoch)}{' '}\n                        {Math.max(currentEpoch - 2, 0)}\n                      </p>\n                    </div>\n                    {!!epochsSynced && (\n                      <div\n                        className={styles.indicatorEpochsSynced}\n                        style={{ width: `${epochsSynced}%` }}\n                      >\n                        <p style={this.getPositionOfEpochsSynced(epochsSynced)}>\n                          <FormattedMessage\n                            {...messages.synced}\n                            values={{ epochsSynced }}\n                          />\n                        </p>\n                      </div>\n                    )}\n                    <div\n                      className={styles.indicatorEpochsConsolidatedContainer}\n                    >\n                      <div\n                        className={styles.indicatorEpochsConsolidated}\n                        style={{ width: `${widthOfEpochsConsolidated}%` }}\n                      >\n                        <p\n                          style={this.getPositionOfEpochsConsolidated(\n                            widthOfEpochsConsolidated\n                          )}\n                        >\n                          {epochsConsolidated}{' '}\n                          {formatMessage(messages.epochsConsolidated)}\n                        </p>\n                      </div>\n                    </div>\n                    <p className={styles.fullEpoch}>\n                      {formatMessage(messages.epoch)} {currentEpoch}\n                    </p>\n                  </Fragment>\n                )}\n              </div>\n            </div>\n\n            <Button\n              className={styles.learnMoreButton}\n              label={\n                <p>\n                  <SVGInline\n                    svg={externalLinkIcon}\n                    className={styles.externalLinkIcon}\n                  />\n                  {formatMessage(messages.learnMoreButton)}\n                </p>\n              }\n              onClick={() =>\n                onExternalLinkClick(formatMessage(messages.learnMoreButtonURL))\n              }\n              skin={ButtonSkin}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"AAmBA","sourceRoot":""}